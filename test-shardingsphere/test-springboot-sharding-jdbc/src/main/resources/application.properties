
# \u66F4\u591A\u53C2\u8003\uFF1Ahttps://shardingsphere.apache.org/document/4.1.1/cn/manual/sharding-jdbc/configuration/config-spring-boot/

# Spring\u6570\u636E\u6E90 \u88ABshardingsphere\u6570\u636E\u6E90\u66FF\u4EE3
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?allowPublicKeyRetrieval=true&useSSL=true
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.username=root
#spring.datasource.password=123456


## ==========\u6570\u636E\u6E90\u914D\u7F6E==========
## \u914D\u7F6E\u771F\u5B9E\u6570\u636E\u6E90\u540D\u79F0
#spring.shardingsphere.datasource.names=ds0,ds1
## \u6307\u5B9A\u9ED8\u8BA4\u6570\u636E\u6E90\uFF0C\u4E0D\u6307\u5B9A\u65F6,\u8F6E\u8BE2\u83B7\u53D6\u5404\u4E2A\u6570\u636E\u6E90\u7684\u503C
#spring.shardingsphere.sharding.default-data-source-name=ds0
## \u663E\u793Ashardingsphere\u6267\u884C\u7684sql
#spring.shardingsphere.props.sql.show=true
#
## \u914D\u7F6E\u7B2C 1 \u4E2A\u6570\u636E\u6E90
#spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://47.106.74.177:13306/test-shardingjdbc1?allowPublicKeyRetrieval=true&useSSL=true
#spring.shardingsphere.datasource.ds0.username=hd
#spring.shardingsphere.datasource.ds0.password=hd123456
#
## \u914D\u7F6E\u7B2C 2 \u4E2A\u6570\u636E\u6E90
#spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://47.106.74.177:13306/test-shardingjdbc2?allowPublicKeyRetrieval=true&useSSL=true
#spring.shardingsphere.datasource.ds1.username=hd
#spring.shardingsphere.datasource.ds1.password=hd123456


## ==========\u6570\u636E\u5206\u7247\u9ED8\u8BA4\u914D\u7F6E==========

# \u9ED8\u8BA4\u884C\u8868\u8FBE\u5F0F \u6570\u636E\u5E93\u5206\u7247\u7B56\u7565
# \u9ED8\u8BA4\u884C\u8868\u8FBE\u5F0F \u6570\u636E\u5E93\u5206\u7247\u7B56\u7565 \u5217
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
# \u9ED8\u8BA4\u6570\u636E\u5E93\u5206\u7247\u7B56\u7565 \u7B97\u6CD5\u8868\u8FBE\u5F0F
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds${user_id % 2}

# \u9ED8\u8BA4\u884C\u8868\u8FBE\u5F0F \u5206\u7247\u7B56\u7565
# \u9ED8\u8BA4\u884C\u8868\u8FBE\u5F0F \u5206\u7247\u7B56\u7565 \u5217
spring.shardingsphere.sharding.default-table-strategy.inline.sharding-column=order_id
# \u9ED8\u8BA4\u884C\u8868\u8FBE\u5F0F\u5206\u7247\u7B56\u7565 \u7B97\u6CD5\u8868\u8FBE\u5F0F
spring.shardingsphere.sharding.default-table-strategy.inline.algorithm-expression=t_order_${order_id % 2}

## \u9ED8\u8BA4\u81EA\u589E\u5217\u540D\u79F0\uFF0C\u7F3A\u7701\u8868\u793A\u4E0D\u4F7F\u7528\u81EA\u589E\u4E3B\u952E\u751F\u6210\u5668
#spring.shardingsphere.sharding.default-key-generate-strategy.xxx=
## \u9ED8\u8BA4\u81EA\u589E\u5217\u503C\u751F\u6210\u5668\u7C7B\u578B\uFF0C\u7F3A\u7701\u8868\u793A\u4F7F\u7528\u9ED8\u8BA4\u81EA\u589E\u5217\u503C\u751F\u6210\u5668\u3002\u53EF\u4F7F\u7528\u7528\u6237\u81EA\u5B9A\u4E49\u7684\u5217\u503C\u751F\u6210\u5668\u6216\u9009\u62E9\u5185\u7F6E\u7C7B\u578B\uFF1ASNOWFLAKE/UUID
#spring.shardingsphere.sharding.default-sharding-column=

## \u7528\u4E8E\u5355\u5206\u7247\u952E\u7684\u6807\u51C6\u5206\u7247\u573A\u666F
#spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column= # \u5206\u7247\u5217\u540D\u79F0
#spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name= # \u5206\u7247\u7B97\u6CD5\u540D\u79F0


## ==========\u6570\u636E\u5206\u7247\u5177\u4F53\u914D\u7F6E==========
# \u5206\u7247\u8868\u914D\u7F6E
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds${0..1}.t_order_${0..1}
# \u884C\u8868\u8FBE\u5F0F \u6570\u636E\u5E93\u5206\u7247\u7B56\u7565,\u53EF\u8986\u76D6\u9ED8\u8BA4\u914D\u7F6E
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.algorithm-expression=ds${user_id % 2}
# \u884C\u8868\u8FBE\u5F0F \u5206\u7247\u7B56\u7565,\u53EF\u8986\u76D6\u9ED8\u8BA4\u914D\u7F6E
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_${order_id % 2}
# \u81EA\u589E\u5217\u540D\u79F0\uFF0C\u7F3A\u7701\u8868\u793A\u4E0D\u4F7F\u7528\u81EA\u589E\u4E3B\u952E\u751F\u6210\u5668
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
# \u81EA\u589E\u5217\u503C\u751F\u6210\u5668\u7C7B\u578B\uFF0C\u7F3A\u7701\u8868\u793A\u4F7F\u7528\u9ED8\u8BA4\u81EA\u589E\u5217\u503C\u751F\u6210\u5668\u3002\u53EF\u4F7F\u7528\u7528\u6237\u81EA\u5B9A\u4E49\u7684\u5217\u503C\u751F\u6210\u5668\u6216\u9009\u62E9\u5185\u7F6E\u7C7B\u578B\uFF1ASNOWFLAKE/UUID
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE

#\u7528\u4E8E\u5355\u5206\u7247\u952E\u7684\u6807\u51C6\u5206\u7247\u573A\u666F
#\u5206\u7247\u5217\u540D\u79F0
#spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
# \u7CBE\u786E\u5206\u7247\u7B97\u6CD5\u7C7B\u540D\u79F0\uFF0C\u7528\u4E8E=\u548CIN\u3002\u8BE5\u7C7B\u9700\u5B9E\u73B0PreciseShardingAlgorithm\u63A5\u53E3\u5E76\u63D0\u4F9B\u65E0\u53C2\u6570\u7684\u6784\u9020\u5668
#spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.precise-algorithm-class-name=com.test.springboot.sharding.algorithm.CustomShardingAlgorithm
# \u8303\u56F4\u5206\u7247\u7B97\u6CD5\u7C7B\u540D\u79F0\uFF0C\u7528\u4E8EBETWEEN\uFF0C\u53EF\u9009\u3002\u8BE5\u7C7B\u9700\u5B9E\u73B0RangeShardingAlgorithm\u63A5\u53E3\u5E76\u63D0\u4F9B\u65E0\u53C2\u6570\u7684\u6784\u9020\u5668
#spring.shardingsphere.sharding.tables.<logic-table-name>.database-strategy.standard.range-algorithm-class-name=


spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item_$->{0..1}
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item_$->{order_id % 2}
spring.shardingsphere.sharding.tables.t_order_item.key-generator.column=item_id
spring.shardingsphere.sharding.tables.t_order_item.key-generator.type=SNOWFLAKE

# \u7ED1\u5B9A\u8868-\u5173\u8054\u67E5\u8BE2\u65F6\u6709\u6548
# \u6307\u5206\u7247\u89C4\u5219\u4E00\u81F4\u7684\u4E3B\u8868\u548C\u5B50\u8868\u3002\u4F8B\u5982\uFF1A t_order \u8868\u548C t_order_item \u8868\uFF0C\u5747\u6309\u7167 order_id \u5206\u7247,\u7ED1\u5B9A\u8868\u4E4B\u95F4\u7684\u5206\u533A\u952E\u5B8C\u5168\u76F8\u540C\uFF0C\u5219\u6B64\u4E24\u5F20\u8868\u4E92\u4E3A\u7ED1\u5B9A\u8868\u5173\u7CFB
spring.shardingsphere.sharding.binding-tables[0]=t_order,t_order_item
# \u5E7F\u64AD\u8868
spring.shardingsphere.sharding.broadcast-tables=t_config

## ==========\u8BFB\u5199\u5206\u79BB\u914D\u7F6E==========
# \u914D\u7F6E\u771F\u5B9E\u6570\u636E\u6E90\u540D\u79F0
spring.shardingsphere.datasource.names=master0,slave0,master1,slave1
# \u6307\u5B9A\u9ED8\u8BA4\u6570\u636E\u6E90\uFF0C\u4E0D\u6307\u5B9A\u65F6,\u8F6E\u8BE2\u83B7\u53D6\u5404\u4E2A\u6570\u636E\u6E90\u7684\u503C
spring.shardingsphere.sharding.default-data-source-name=ds0
# \u663E\u793Ashardingsphere\u6267\u884C\u7684sql
spring.shardingsphere.props.sql.show=true

# \u914D\u7F6E\u7B2C 1 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.master0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.master0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master0.jdbc-url=jdbc:mysql://47.106.74.177:13306/test-shardingjdbc1?allowPublicKeyRetrieval=true&useSSL=true
spring.shardingsphere.datasource.master0.username=hd
spring.shardingsphere.datasource.master0.password=hd123456

# \u914D\u7F6E\u7B2C 2 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.master1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.master1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master1.jdbc-url=jdbc:mysql://47.106.74.177:13306/test-shardingjdbc2?allowPublicKeyRetrieval=true&useSSL=true
spring.shardingsphere.datasource.master1.username=hd
spring.shardingsphere.datasource.master1.password=hd123456
# \u914D\u7F6E\u7B2C 3 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.slave0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave0.jdbc-url=jdbc:mysql://120.78.189.168:13306/test-shardingjdbc1?allowPublicKeyRetrieval=true&useSSL=true
spring.shardingsphere.datasource.slave0.username=hd
spring.shardingsphere.datasource.slave0.password=hd123456

# \u914D\u7F6E\u7B2C 4 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.slave1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave1.jdbc-url=jdbc:mysql://120.78.189.168:13306/test-shardingjdbc2?allowPublicKeyRetrieval=true&useSSL=true
spring.shardingsphere.datasource.slave1.username=hd
spring.shardingsphere.datasource.slave1.password=hd123456

# \u4E3B\u4ECE\u6570\u636E\u6E90\u89C4\u5219\u914D\u7F6E
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=master0
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=slave0
spring.shardingsphere.sharding.master-slave-rules.ds1.master-data-source-name=master1
spring.shardingsphere.sharding.master-slave-rules.ds1.slave-data-source-names=slave1


## ==========\u6570\u636E\u8131\u654F==========
#\u52A0\u89E3\u5BC6\u5668\u7C7B\u578B\uFF0C\u53EF\u81EA\u5B9A\u4E49\u6216\u9009\u62E9\u5185\u7F6E\u7C7B\u578B\uFF1AMD5/AES
spring.shardingsphere.sharding.encrypt-rule.encryptors.encryptor_aes.type=aes
#\u5C5E\u6027\u914D\u7F6E, \u6CE8\u610F\uFF1A\u4F7F\u7528AES\u52A0\u5BC6\u5668\uFF0C\u9700\u8981\u914D\u7F6EAES\u52A0\u5BC6\u5668\u7684KEY\u5C5E\u6027\uFF1Aaes.key.value
spring.shardingsphere.sharding.encrypt-rule.encryptors.encryptor_aes.props.aes.key.value=123456

#\u52A0\u89E3\u5BC6\u56682
spring.shardingsphere.sharding.encrypt-rule.encryptors.encryptor_md5.type=md5

#\u52A0\u89E3\u5BC6\u56683
spring.shardingsphere.sharding.encrypt-rule.encryptors.encryptor_cust.type=cust

#\u5B58\u50A8\u660E\u6587\u7684\u5B57\u6BB5
#spring.shardingsphere.sharding.encrypt-rule.tables.user.columns.pwd.plainColumn=password
#\u5B58\u50A8\u5BC6\u6587\u7684\u5B57\u6BB5
spring.shardingsphere.sharding.encrypt-rule.tables.user.columns.pwd.cipherColumn=md5_password
#\u52A0\u5BC6\u5668\u540D\u5B57
spring.shardingsphere.sharding.encrypt-rule.tables.user.columns.pwd.encryptor=encryptor_cust
#spring.shardingsphere.sharding.encrypt-rule.tables.user.columns.pwd.encryptor=encryptor_cust

#spring.shardingsphere.sharding.encrypt-rule.tables.user.columns.pwd2.plainColumn=password
spring.shardingsphere.sharding.encrypt-rule.tables.user.columns.pwd2.cipherColumn=aes_password
spring.shardingsphere.sharding.encrypt-rule.tables.user.columns.pwd2.encryptor=encryptor_aes