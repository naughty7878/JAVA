<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!-- 
		1、mybatis可以使用properties来引入外部properties配置文件的内容
			resource：引入类路径下的资源
			url：引入网络路径或磁盘路径下的资源
	 -->
	<properties resource="dbconfig.properties"></properties>
	
	<!-- 
		2、settings包含含多重要的设置项
			setting：用来设置每一个设置项
				name：设置项名字
				values：设置项取值
	 -->
	<settings>
		<setting name="mapUnderscoreToCamelCase" value="true"/>
		
		<!--显示的指定每个我们需要更改的配置的值，即使他是默认的。防止版本更新带来的问题  -->
		<!-- <setting name="lazyloadingenabled" value="true"/>
		<setting name="aggressivelazyloading" value="false"/> -->
		
		<!-- 设置二级缓存，默认是true -->
		<setting name="cacheEnabled" value="true"/>
	</settings>
	
	 <!-- 
	 	3、typeAliases：别名处理器，可以为Java类取别名
	 		1）typeAlias：为某个Java类型取别名
	 			type：指定起别名的类型全限定名，默认别名就是类名小写（别名大小写不敏感）
	 			alias：指定新的别名
	 		2）package：为某个包下的所有类批量取别名
	 			name：指定包名（为当前包以及下面所有的后代包的每一个类起一个默认别名（类名小写））
	 		3) 批量起别名的情况下，使用@Alias注解为某个类型指定新的别名
	 		
	 		不推荐使用别名：无法从xml中关联查看类
	  -->
	<typeAliases>
		<!-- <typeAlias type="com.hd.test.pojo.Employee" alias="emp"/> -->
		<package name="com.hd.test.pojo"/>
	</typeAliases>
	
	<!-- 
		4、environments：环境们，mybatis可以配置多种环境，dafault指定某中环境。可以达到快速切换环境的目的
			environment：配置一个具体的环境信息，必须有两个标签：id代表当前环境的唯一标识
				transactionManager：事物管理器
					type：事物管理器的类型；JDBC（JdbcTransactionFactory）|MANAGED（ManagedTransactionFactory）
							自定义事物管理器：实现TransactionFactory接口，type指定为全限定名
				dataSource：数据源；
					type：数据源类型；UNPOOLED|POOLED|JNDI
					自定义数据源 实现DateSourceFactory接口 type是全限定名
					
	 -->
	<environments default="development">
		<environment id="development">
			<transactionManager type="JDBC" />
			<!-- 配置数据库连接信息 -->
			<dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}" />
                <property name="url" value="${jdbc.url}" />
                <property name="username" value="${jdbc.username}" />
                <property name="password" value="${jdbc.password}" />
            </dataSource>
		</environment>
	</environments>
	
	
	<!-- 5、databaseIdProvider：支持多数据库厂商的；
		 type="DB_VENDOR"：VendorDatabaseIdProvider
		 	作用就是得到数据库厂商的标识(驱动getDatabaseProductName())，mybatis就能根据数据库厂商标识来执行不同的sql;
		 	MySQL，Oracle，SQL Server,xxxx
	  -->
	<databaseIdProvider type="DB_VENDOR">
		<!-- 为不同的数据库厂商起别名 -->
		<property name="MySQL" value="mysql"/>
		<property name="Oracle" value="oracle"/>
		<property name="SQL Server" value="sqlserver"/>
	</databaseIdProvider>
	
	
	<!-- 
		6、mappers：将sql映射注入到全局配置中
			mapper：注册一个sql映射
				resource：饮用类路径下的sql映射文件
					mapper/EmployeeMapper.xml
				url：引用网络路径或者磁盘路径下的sql映射文件
					file:///var/mappers/AuthorMapper.xml
				class：引用（注册接口）
					1）有sql映射文件，映射文件名必须和接口同名，并且放在与接口同一目录下；
					2）没有sql映射文件，所有的sql都是利用注解写在接口上；
					推荐：
						比较重要的，复杂的Dao接口自己写sql映射文件
						不重要，简单的Dao接口为了快速开发可以使用注解
	 -->
	<mappers>
		<!-- 添加sql射文件到Mybatis的全局配置文件中 -->
		<mapper resource="mapper/EmployeeMapper.xml" />
		
		<!-- <mapper class="com.hd.test.mapper.EmployeeMapper" />
		<mapper class="com.hd.test.mapper.EmployeeMapperPlus" /> -->
		
		<!-- <package name="com.hd.test.mapper"/> -->
	</mappers>

</configuration>







