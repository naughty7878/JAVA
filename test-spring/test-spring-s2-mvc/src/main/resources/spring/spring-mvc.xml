<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop"
	    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- 自动扫描的包名 -->
	<context:component-scan base-package="com.test.mvc.controller" />

	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.ResourceHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>



	<!-- 视图解释类,定义跳转的文件的前后缀 -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" 
		/> <property name="prefix" value="/views/" /> <property name="suffix" value=".jsp" 
		/> <property name="requestContextAttribute" value="rc" /> </bean> -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/view/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- 拦截器 -->
	<!-- <mvc:interceptors> <bean class="com.fpx.ce.foundation.preference.PreferenceChangeInterceptor" 
		/> <mvc:interceptor> <mvc:mapping path="/page/home"/> <bean class="com.fpx.ce.foundation.user.UserInterceptor" 
		/> </mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/service/**" /> 
		<bean class="com.fpx.ce.foundation.log.LogHandlerInterceptor" /> </mvc:interceptor> 
		<mvc:interceptor> <mvc:mapping path="/test/**" /> <mvc:mapping path="/service/**" 
		/> <bean class="com.lemon.finder.web.SharedRenderVariableInterceptor" /> 
		</mvc:interceptor> </mvc:interceptors> -->

	<mvc:interceptors>
		<mvc:interceptor>
			<!-- /**的意思是所有文件夹及里面的子文件夹 /*是所有文件夹，不含子文件夹 /是web项目的根目录 -->
			<mvc:mapping path="/getView" />
			<!-- 需排除拦截的地址 -->
			<!-- <mvc:exclude-mapping path="/userController/login"/> -->
			<bean id="myInterceptor" class="com.test.mvc.interceptor.MyInterceptor"></bean> <!--这个类就是我们自定义的Interceptor -->
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>

	<!-- 对静态资源文件的访问 方案一 （二选一） -->
	<mvc:default-servlet-handler />

	<!-- 对静态资源文件的访问 方案二 （二选一） -->
	<!-- <mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/> 
		<mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/> 
		<mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/> -->
</beans>
